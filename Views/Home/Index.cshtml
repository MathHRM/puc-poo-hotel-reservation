@{
    ViewData["Title"] = "AcomodaJá";
}

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
</head>


<style>
    .card-img-top {
        max-height: 190px;
    }
</style>

<body>
    <div class="container">

        <div class="results-section mt-5">
            <h3 class="mb-4">Quartos Disponiveis:</h3>
            <div class="row">

                @foreach (var dto in Model)
                {
                    <script>console.log(@Json.Serialize(dto.UnavailablePeriods))</script>
                    <div class="col-xl-3 col-lg-4 col-md-6 mb-4">
                        <div class="card h-100">
                            <img src="@dto.Room.ImgURL" class="card-img-top"
                                alt="Imagem do quarto numero @dto.Room.RoomNumber">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">Quarto número: @dto.Room.RoomNumber</h5>
                                <p class="card-text ">@dto.Room.Description</p>
                                <p class="card-text ">Preço diária: R$@dto.Room.Rent,00</p>
                                <a href="#" class="btn btn-warning mt-auto" data-bs-toggle="modal"
                                    data-bs-target="#meuModal" data-room-number="@dto.Room.RoomNumber"
                                    data-unavailable-periods='@Json.Serialize(dto.UnavailablePeriods)'>
                                    Reservar
                                </a>
                            </div>
                        </div>
                    </div>
                }

                <div class="modal fade" id="meuModal" tabindex="-1" aria-labelledby="meuModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="meuModalLabel">Formulário de Reserva</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body mx-auto">
                                <p class="text-center">Selecione as datas de check-in e check-out para a sua reserva.
                                </p>

                                <div id="calendario-range" class="mx-auto"></div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                                <button type="button" id="btnSalvarReserva" class="btn btn-primary">Salvar Reserva</button>
                            </div>
                        </div>
                    </div>
                </div>
</body>

<script>
    let calendarioInstancia = null;
    let checkinDate = null;
    let checkoutDate = null;
    let currentRoomNumber = null;

    const modal = document.getElementById('meuModal');
    const modalTitle = document.getElementById('meuModalLabel');
    const btnSalvarReserva = document.getElementById('btnSalvarReserva');

    modal.addEventListener('shown.bs.modal', function (event) {
        const button = event.relatedTarget;

        currentRoomNumber = button.getAttribute('data-room-number');
        const unavailablePeriodsJson = button.getAttribute('data-unavailable-periods');

        modalTitle.textContent = `Reserva para o Quarto ${currentRoomNumber}`;

        
        const unavailablePeriods = JSON.parse(unavailablePeriodsJson);
        console.log(unavailablePeriodsJson); 

        const datasBloqueadas = unavailablePeriods.map(periodo => ({
            from: new Date(periodo.startDate).toISOString().split('T')[0],
            to: new Date(periodo.endDate).toISOString().split('T')[0]
        }));

        if (calendarioInstancia) {
            calendarioInstancia.destroy();
        }

        console.log("Datas bloqueadas para este quarto:", datasBloqueadas);
    
        calendarioInstancia = flatpickr("#calendario-range", {
            mode: "range",
            inline: true,
            minDate: "today",
            dateFormat:"Y-m-d",
            showMonths: 2,
            disable: datasBloqueadas,
            onChange: function (selectedDates, dateStr, instance) {
                if (selectedDates.length === 2) {
                    const date = dateStr.split(' to ');
                    checkinDate = date[0];
                    checkoutDate = date[1];
                    btnSalvarReserva.disabled = false;
                    console.log(`Reserva para o quarto ${currentRoomNumber}:`);
                    console.log("Check-in:", checkinDate);
                    console.log("Check-out:", checkoutDate);
                }else
                {
                    btnSalvarReserva.disabled = true;
                }
            }
        });
        checkinDate = null;
        checkoutDate = null;
        btnSalvarReserva.disabled = true; 
        console.log(datasBloqueadas);
    });


    btnSalvarReserva.addEventListener('click', async function () { 
            const reservationData = {
                RoomNumber: parseInt(currentRoomNumber),
                StartDate: checkinDate,
                EndDate: checkoutDate
            };

            console.log('Enviando para o servidor:', JSON.stringify(reservationData));
            
    
            btnSalvarReserva.disabled = true;
            btnSalvarReserva.textContent = 'Salvando...';

            try {
                const response = await fetch('/Room/Reservation', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(reservationData)
                });

                if (response.ok) {
                    const result = await response.json();
                    alert(result.message);
                    window.location.reload(); 
                } else {
                    const errorResult = await response.json();
                    alert(`Erro: ${errorResult.message}`);
                }

            } catch (error) {
                console.error('Falha na requisição:', error);
                alert('Não foi possível se conectar ao servidor.');
            } finally {
                btnSalvarReserva.disabled = false;
                btnSalvarReserva.textContent = 'Salvar Reserva';
            }
        });
</script>